#pragma once

#include "CMDefines.h"
BEGIN_CM_NAMESPACE
#ifdef WIN32
//#pragma push_macro("FOREGROUND_BLUE")
//#pragma push_macro("FOREGROUND_GREEN")
//#pragma push_macro("FOREGROUND_RED")
//#pragma push_macro("FOREGROUND_INTENSITY")
//#pragma push_macro("BACKGROUND_BLUE")
//#pragma push_macro("BACKGROUND_GREEN")
//#pragma push_macro("BACKGROUND_RED")
//#pragma push_macro("BACKGROUND_INTENSITY")
//#undef FOREGROUND_BLUE
//#undef FOREGROUND_GREEN
//#undef FOREGROUND_RED
//#undef FOREGROUND_INTENSITY
//#undef BACKGROUND_BLUE
//#undef BACKGROUND_GREEN
//#undef BACKGROUND_RED
//#undef BACKGROUND_INTENSITY

#define FOREGROUND_BLUE 0x0001       // text color contains blue.
#define FOREGROUND_GREEN 0x0002      // text color contains green.
#define FOREGROUND_RED 0x0004        // text color contains red.
#define FOREGROUND_INTENSITY 0x0008  // text color is intensified.
#define BACKGROUND_BLUE 0x0010       // background color contains blue.
#define BACKGROUND_GREEN 0x0020      // background color contains green.
#define BACKGROUND_RED 0x0040        // background color contains red.
#define BACKGROUND_INTENSITY 0x0080  // background color is intensified.

enum class FontColor {
  Default = 0x0000,
  Red = FOREGROUND_RED,
  LightRed = FOREGROUND_INTENSITY,
  LightBlue = FOREGROUND_BLUE | FOREGROUND_INTENSITY,
  Green = FOREGROUND_GREEN,
  LightGreen = FOREGROUND_GREEN | FOREGROUND_INTENSITY,
  Cyan = FOREGROUND_BLUE | FOREGROUND_GREEN,
  LightCyan = FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_INTENSITY,
  Yellow = FOREGROUND_RED | FOREGROUND_GREEN,
  LightYellow = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_INTENSITY,
  Purple = FOREGROUND_RED | FOREGROUND_BLUE,
  LightPurple = FOREGROUND_RED | FOREGROUND_BLUE | FOREGROUND_INTENSITY
};
enum class BackColor {
  Default = 0x0000,
  Red = BACKGROUND_RED,
  LightRed = BACKGROUND_INTENSITY,
  LightBlue = BACKGROUND_BLUE | BACKGROUND_INTENSITY,
  Green = BACKGROUND_GREEN,
  LightGreen = BACKGROUND_GREEN | BACKGROUND_INTENSITY,
  Cyan = BACKGROUND_BLUE | BACKGROUND_GREEN,
  LightCyan = BACKGROUND_BLUE | BACKGROUND_GREEN | BACKGROUND_INTENSITY,
  Yellow = BACKGROUND_RED | BACKGROUND_GREEN,
  LightYellow = BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_INTENSITY,
  Purple = BACKGROUND_RED | BACKGROUND_BLUE,
  LightPurple = BACKGROUND_RED | BACKGROUND_BLUE | BACKGROUND_INTENSITY
};

#endif  // WIN32

#ifdef _Linux

enum class FontColor {
  Red = FOREGROUND_RED,
  LightRed = FOREGROUND_INTENSITY,
  LightBlue = FOREGROUND_BLUE | FOREGROUND_INTENSITY,
  Green = FOREGROUND_GREEN,
  LightGreen = FOREGROUND_GREEN | FOREGROUND_INTENSITY,
  Cyan = FOREGROUND_BLUE | FOREGROUND_GREEN,
  LightCyan = FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_INTENSITY,
  Yellow = FOREGROUND_RED | FOREGROUND_GREEN,
  LightYellow = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_INTENSITY,
  Purple = FOREGROUND_RED | FOREGROUND_BLUE,
  LightPurple = FOREGROUND_RED | FOREGROUND_BLUE | FOREGROUND_INTENSITY
};
enum class BackColor {
  Red = BACKGROUND_RED,
  LightRed = BACKGROUND_INTENSITY,
  LightBlue = BACKGROUND_BLUE | BACKGROUND_INTENSITY,
  Green = BACKGROUND_GREEN,
  LightGreen = BACKGROUND_GREEN | BACKGROUND_INTENSITY,
  Cyan = BACKGROUND_BLUE | BACKGROUND_GREEN,
  LightCyan = BACKGROUND_BLUE | BACKGROUND_GREEN | BACKGROUND_INTENSITY,
  Yellow = BACKGROUND_RED | BACKGROUND_GREEN,
  LightYellow = BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_INTENSITY,
  Purple = BACKGROUND_RED | BACKGROUND_BLUE,
  LightPurple = BACKGROUND_RED | BACKGROUND_BLUE | BACKGROUND_INTENSITY
};

#endif  // _Linux

END_CM_NAMESPACE
